<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dmodule>
<dmodule xmlns:dc="http://www.purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.s1000d.org/S1000D_5-0/xml_schema_flat/descript.xsd">
  <identAndStatusSection>
    <dmAddress>
      <dmIdent>
        <dmCode modelIdentCode="S1KDTOOLS" systemDiffCode="A" systemCode="26" subSystemCode="0" subSubSystemCode="0" assyCode="00" disassyCode="00" disassyCodeVariant="A" infoCode="040" infoCodeVariant="A" itemLocationCode="D"/>
        <language languageIsoCode="en" countryIsoCode="CA"/>
        <issueInfo issueNumber="021" inWork="00"/>
      </dmIdent>
      <dmAddressItems>
        <issueDate year="2019" month="10" day="04"/>
        <dmTitle>
          <techName>s1kd-aspp</techName>
          <infoName>Description</infoName>
        </dmTitle>
      </dmAddressItems>
    </dmAddress>
    <dmStatus issueType="changed">
      <security securityClassification="01"/>
      <responsiblePartnerCompany>
        <enterpriseName>khzae.net</enterpriseName>
      </responsiblePartnerCompany>
      <originator>
        <enterpriseName>khzae.net</enterpriseName>
      </originator>
      <applic>
        <displayText>
          <simplePara>All</simplePara>
        </displayText>
      </applic>
      <brexDmRef>
        <dmRef>
          <dmRefIdent>
            <dmCode modelIdentCode="S1KDTOOLS" systemDiffCode="A" systemCode="00" subSystemCode="0" subSubSystemCode="0" assyCode="00" disassyCode="00" disassyCodeVariant="A" infoCode="022" infoCodeVariant="A" itemLocationCode="D"/>
          </dmRefIdent>
        </dmRef>
      </brexDmRef>
      <qualityAssurance>
        <unverified/>
      </qualityAssurance>
    </dmStatus>
  </identAndStatusSection>
  <content>
    <description>
      <levelledPara>
        <title>General</title>
        <para>The <emphasis>s1kd-aspp</emphasis> tool has two main functions:</para>
        <para>
          <randomList>
            <listItem>
              <para>Generates display text for applicability statements. The text is derived from the logic described by the <verbatimText verbatimStyle="vs12">assert</verbatimText> and <verbatimText verbatimStyle="vs12">evaluate</verbatimText> elements.</para>
            </listItem>
            <listItem>
              <para>Preprocesses "semantic" applicability statements in a data module to produce "presentation" applicability statements which are simpler to parse in an XSLT stylesheet.</para>
            </listItem>
          </randomList>
        </para>
        <para>"Semantic" applicability statements are those entered by the author to encode the applicability of elements within a data module. "Presentation" applicability statements are those that are actually displayed in page-oriented output, also referred to as the "human-readable" statements.</para>
        <para>The applicability in the resulting XML is longer semantically correct, but an XSLT stylesheet can simply place a statement on any element with attribute <verbatimText verbatimStyle="vs13">applicRefId</verbatimText> without needing to consider inherited applicability statements on elements without the attribute.</para>
      </levelledPara>
      <levelledPara>
        <title>Usage</title>
        <para>
          <verbatimText verbatimStyle="vs24">s1kd-aspp -h?
s1kd-aspp -D
s1kd-aspp -g [-A &lt;ACT&gt;] [-C &lt;CCT&gt;] [-d &lt;dir&gt;] [-F &lt;fmt&gt;] [-G &lt;XSL&gt;]
             [-cfklNrv] [&lt;object&gt;...]
s1kd-aspp -p [-a &lt;ID&gt;] [-flv] [&lt;object&gt;...]</verbatimText>
        </para>
      </levelledPara>
      <levelledPara>
        <title>Options</title>
        <para>
          <definitionList>
            <definitionListItem>
              <listItemTerm>-A, --act &lt;ACT&gt;</listItemTerm>
              <listItemDefinition>
                <para>Add an ACT to use when generating display text for product attributes. Multiple ACT data modules can be used by specifying this option multiple times.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-a, --id &lt;ID&gt;</listItemTerm>
              <listItemDefinition>
                <para>The ID to use for the inline applicability annotation representing the whole data module's applicability. Default is "app-0000".</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-C, --cct &lt;CCT&gt;</listItemTerm>
              <listItemDefinition>
                <para>Add a CCT to use when generating display text for conditions. Multiple CCT data modules can be used by specifying this option multiple times.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-c, --search</listItemTerm>
              <listItemDefinition>
                <para>Search for the ACT and CCT referenced by each data module, and add them to the list of ACTs/CCTs to use when generating display text for that data module.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-D, --dump</listItemTerm>
              <listItemDefinition>
                <para>Dump the built-in XSLT used to generate display text for applicability statements.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-d, --dir &lt;dir&gt;</listItemTerm>
              <listItemDefinition>
                <para>Directory to start searching for ACT/CCT data modules in. By default, the current directory is used.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-F, --format &lt;fmt&gt;</listItemTerm>
              <listItemDefinition>
                <para>Use a custom format string to generate display text.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-f, --overwrite</listItemTerm>
              <listItemDefinition>
                <para>Overwrite input data module(s) rather than outputting to stdout.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-G, --xsl &lt;XSLT&gt;</listItemTerm>
              <listItemDefinition>
                <para>Use custom XSLT to generate display text for applicability statements.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-g, --generate</listItemTerm>
              <listItemDefinition>
                <para>Generate display text for applicability statements.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-h, -?, --help</listItemTerm>
              <listItemDefinition>
                <para>Show help/usage message.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-k, --keep</listItemTerm>
              <listItemDefinition>
                <para>When generating display text, do not overwrite existing display text on statements, only generate display text for statements which have none.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-l, --list</listItemTerm>
              <listItemDefinition>
                <para>Treat input (stdin or arguments) as lists of filenames of objects, rather than objects themselves.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-N, --omit-issue</listItemTerm>
              <listItemDefinition>
                <para>Assume that the filenames for the ACT and CCT do not include issue info, i.e. they were created using the -N option of the s1kd-newdm tool.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-p, --presentation</listItemTerm>
              <listItemDefinition>
                <para>Preprocess applicability statements to produce "presentation" applicability statements which are simpler to parse in an XSLT stylesheet. The applicability in the resulting XML is no longer semantically correct.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-r, --recursive</listItemTerm>
              <listItemDefinition>
                <para>Search for ACT/CCT data modules recursively.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>-v, --verbose</listItemTerm>
              <listItemDefinition>
                <para>Verbose output.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>--version</listItemTerm>
              <listItemDefinition>
                <para>Show version information.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>&lt;object&gt;...</listItemTerm>
              <listItemDefinition>
                <para>The object(s) to preprocess. This can include both individual objects and combined files such as those produced by s1kd-flatten(1).</para>
              </listItemDefinition>
            </definitionListItem>
          </definitionList>
        </para>
        <para>In addition, the following options enable features of the XML parser that are disabled as a precaution by default:</para>
        <para>
          <definitionList>
            <definitionListItem>
              <listItemTerm>--dtdload</listItemTerm>
              <listItemDefinition>
                <para>Load the external DTD.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>--net</listItemTerm>
              <listItemDefinition>
                <para>Allow network access to load external DTD and entities.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>--noent</listItemTerm>
              <listItemDefinition>
                <para>Resolve entities.</para>
              </listItemDefinition>
            </definitionListItem>
            <definitionListItem>
              <listItemTerm>--xinclude</listItemTerm>
              <listItemDefinition>
                <para>Do XInclude processing.</para>
              </listItemDefinition>
            </definitionListItem>
          </definitionList>
        </para>
      </levelledPara>
      <levelledPara>
        <title>Examples</title>
        <levelledPara>
          <title>Generating display text</title>
          <para>The built-in XSLT for generating display text follows the guidance in Chap 7.8 of the S1000D 5.0 specification. For example, given the following:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;applic&gt;
&lt;assert applicPropertyIdent="prodversion"
applicPropertyType="prodattr" applicPropertyValues="A"/&gt;
&lt;/applic&gt;</verbatimText>
          </para>
          <para>The resulting XML would contain:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;prodversion: A&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;assert applicPropertyIdent="prodversion"
applicPropertyType="prodattr" applicPropertyValues="A"/&gt;
&lt;/applic&gt;</verbatimText>
          </para>
          <para>If ACTs or CCTs are supplied which define display names for a property, this will be used instead of the ident. For example, the ACT defines the display name for the "<verbatimText verbatimStyle="vs14">prodversion</verbatimText>" product attribute:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;productAttribute id="prodversion"&gt;
&lt;name&gt;Product version&lt;/name&gt;
&lt;displayName&gt;Version&lt;/displayName&gt;
&lt;descr&gt;The version of the product.&lt;/descr&gt;
&lt;enumeration applicPropertyValues="A|B|C"/&gt;
&lt;/productAttribute&gt;</verbatimText>
          </para>
          <para>When supplied with the -A option:</para>
          <para>
            <verbatimText verbatimStyle="vs24">$ s1kd-aspp -g -A &lt;ACT&gt; &lt;DM&gt;</verbatimText>
          </para>
          <para>The resulting XML would instead contain:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;Version: A&lt;/simplePara&gt;
&lt;assert applicPropertyIdent="prodversion"
applicPropertyType="prodattr" applicPropertyValues="A"/&gt;
&lt;/displayText&gt;
&lt;/applic&gt;</verbatimText>
          </para>
          <para>The methods for generating display text can be changed by supplying a custom XSLT script with the -G option. The -D option can be used to dump the built-in XSLT as a starting point for a custom script. An identity template is automatically added to the script, equivalent to the following:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;xsl:template match="@*|node()"&gt;
&lt;xsl:copy&gt;
&lt;xsl:apply-templates select="@*|node()"/&gt;
&lt;/xsl:copy&gt;
&lt;/xsl:template&gt;</verbatimText>
          </para>
          <para>This means any elements or attributes not matched by a more specific template in the script are copied.</para>
        </levelledPara>
        <levelledPara>
          <title>Display text format string (-F)</title>
          <para>The -F option allows for simple customizations to generated display text without needing to create a custom XSLT script (-G). The string determines the format of the display text of each <verbatimText verbatimStyle="vs12">&lt;assert&gt;</verbatimText> element in the annotation.</para>
          <para>The following variables can be used within the format string:
            <definitionList><definitionListItem><listItemTerm>%name%</listItemTerm><listItemDefinition><para>The name of the property.</para></listItemDefinition></definitionListItem><definitionListItem><listItemTerm>%values%</listItemTerm><listItemDefinition><para>The applicable value(s) of the property.</para></listItemDefinition></definitionListItem></definitionList>
          </para>
          <para>For example:
            <verbatimText verbatimStyle="vs24">$ s1kd-aspp -g &lt;DM&gt;
...
&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;Version: A&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;assert applicPropertyIdent="version" applicPropertyType="prodattr"
applicPropertyValues="A"/&gt;
&lt;/applic&gt;
...

$ s1kd-aspp -F '%name% = %values%' -g &lt;DM&gt;
...
&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;Version = A&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;assert applicPropertyIdent="version" applicPropertyType="prodattr"
applicPropertyValues="A"/&gt;
&lt;/applic&gt;
...</verbatimText>
          </para>
        </levelledPara>
        <levelledPara>
          <title>Creating presentation applicability statements</title>
          <para>Given the following:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;dmodule&gt;
&lt;identAndStatusSection&gt;
&lt;dmAddress&gt;...&lt;/dmAddress&gt;
&lt;dmStatus&gt;
...
&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;A or B&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;/applic&gt;
...
&lt;/dmStatus&gt;
&lt;/identAndStatusSection&gt;
&lt;content&gt;
&lt;referencedApplicGroup&gt;
&lt;applic id="app-B"&gt;
&lt;displayText&gt;
&lt;simplePara&gt;B&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;/applic&gt;
&lt;/referencedApplicGroup&gt;
&lt;procedure&gt;
&lt;preliminaryRqmts&gt;...&lt;/preliminaryRqmts&gt;
&lt;mainProcedure&gt;
&lt;proceduralStep&gt;
&lt;para&gt;This step is applicable to A or B.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep applicRefId="app-B"&gt;
&lt;para&gt;This step is applicable to B only.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep applicRefId="app-B"&gt;
&lt;para&gt;This step is also applicable to B only.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep&gt;
&lt;para&gt;This step is also applicable to A or B.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;/mainProcedure&gt;
&lt;closeRqmts&gt;...&lt;/closeRqmts&gt;
&lt;/procedure&gt;
&lt;/content&gt;
&lt;/dmodule&gt;</verbatimText>
          </para>
          <para>Applicability statements should be displayed whenever applicability changes:</para>
          <para>
            <sequentialList>
              <listItem>
                <para>This step is applicable to A or B.</para>
              </listItem>
              <listItem>
                <para>
                  <emphasis>Applicable to: B</emphasis>
                </para>
                <para>This step is applicable to B only.</para>
              </listItem>
              <listItem>
                <para>This step is also applicable to B only.</para>
              </listItem>
              <listItem>
                <para>
                  <emphasis>Applicable to: A or B</emphasis>
                </para>
                <para>This step is also applicable to A or B.</para>
              </listItem>
            </sequentialList>
          </para>
          <para>There are two parts which are difficult to do in an XSLT stylesheet:</para>
          <para>
            <randomList>
              <listItem>
                <para>No statement is shown on Step 3 despite having attribute <verbatimText verbatimStyle="vs13">applicRefId</verbatimText> because the applicability has not changed since the last statement on Step 2.</para>
              </listItem>
              <listItem>
                <para>A statement is shown on Step 4 despite not having attribute <verbatimText verbatimStyle="vs13">applicRefId</verbatimText> because the applicability has changed back to that of the whole data module.</para>
              </listItem>
            </randomList>
          </para>
          <para>Using the s1kd-aspp tool, the above XML would produce the following output:</para>
          <para>
            <verbatimText verbatimStyle="vs11">&lt;dmodule&gt;
&lt;identAndStatusSection&gt;
&lt;dmAddress&gt;...&lt;/dmAddress&gt;
&lt;dmStatus&gt;
...
&lt;applic&gt;
&lt;displayText&gt;
&lt;simplePara&gt;A or B&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;/applic&gt;
...
&lt;/dmStatus&gt;
&lt;/identAndStatusSection&gt;
&lt;content&gt;
&lt;referencedApplicGroup&gt;
&lt;applic id="app-B"&gt;
&lt;displayText&gt;
&lt;simplePara&gt;B&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;/applic&gt;
&lt;applic id="app-0000"&gt;
&lt;displayText&gt;
&lt;simplePara&gt;A or B&lt;/simplePara&gt;
&lt;/displayText&gt;
&lt;/applic&gt;
&lt;/referencedApplicGroup&gt;
&lt;procedure&gt;
&lt;preliminaryRqmts&gt;...&lt;/preliminaryRqmts&gt;
&lt;mainProcedure&gt;
&lt;proceduralStep&gt;
&lt;para&gt;This step is applicable to A or B.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep applicRefId="app-B"&gt;
&lt;para&gt;This step is applicable to B only.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep&gt;
&lt;para&gt;This step is also applicable to B only.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;proceduralStep applicRefId="app-0000"&gt;
&lt;para&gt;This step is also applicable to A or B.&lt;/para&gt;
&lt;/proceduralStep&gt;
&lt;/mainProcedure&gt;
&lt;/procedure&gt;
&lt;/content&gt;
&lt;/dmodule&gt;</verbatimText>
          </para>
          <para>With attribute <verbatimText verbatimStyle="vs13">applicRefId</verbatimText> only on those elements where a statement should be shown, and an additional inline applicability to represent the whole data module's applicability. This XML is semantically incorrect but easier for a stylesheet to transform for page-oriented output.</para>
        </levelledPara>
      </levelledPara>
    </description>
  </content>
</dmodule>
